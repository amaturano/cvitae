{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/card-generator/card-generator.component.ts","./src/app/components/card-generator/card-generator.component.html","./src/app/components/cards/cards.component.ts","./src/app/components/cards/cards.component.html","./src/app/components/coverage/coverage.component.ts","./src/app/components/coverage/coverage.component.html","./src/app/components/dashboard-admin/dashboard-admin.component.ts","./src/app/components/dashboard-admin/dashboard-admin.component.html","./src/app/components/header-tool-bar/header-tool-bar.component.ts","./src/app/components/header-tool-bar/header-tool-bar.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/services/colors.service.ts","./src/app/services/mock-data.js.service.ts","./src/app/services/strings.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {StringService} from './services/strings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cvitae';\n  constructor(\n    private _stringService:StringService\n  ){\n    this._stringService.language = \"Spanish\";\n  }\n  \n}\n","<div>\n  <app-navigation></app-navigation>\n  <app-header-tool-bar></app-header-tool-bar>\n  <app-coverage></app-coverage>\n  <app-cards-component></app-cards-component>\n  <app-dashboard-admin></app-dashboard-admin>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { CardsComponent } from './components/cards/cards.component';\nimport { CardGeneratorComponent } from './components/card-generator/card-generator.component';\nimport { HeaderToolBarComponent } from './components/header-tool-bar/header-tool-bar.component';\nimport { CoverageComponent } from './components/coverage/coverage.component';\nimport { DashboardAdminComponent } from './components/dashboard-admin/dashboard-admin.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsComponent,\n    CardGeneratorComponent,\n    HeaderToolBarComponent,\n    CoverageComponent,\n    DashboardAdminComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatIconModule,\n    LayoutModule,\n    MatSidenavModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ColorService } from '../../services/colors.service';\n\n@Component({\n  selector: 'app-card-generator',\n  templateUrl: './card-generator.component.html',\n  styleUrls: ['./card-generator.component.scss']\n})\nexport class CardGeneratorComponent implements OnInit {\n  @Input() title :string = \"Default title\";\n  @Input() subtitle:string = \"Default subtitle\";\n  @Input() description:string = \"Default description container\";\n  @Input() actionButtons:any = [];\n  @ViewChild('cardContainer', {static:true, read:ElementRef}) private mainContainer?:ElementRef;\n  @ViewChild('cardTitle', {static:true, read:ElementRef}) private cardTitle?:ElementRef;\n  @ViewChild('cardSubtitle', {static:true, read:ElementRef}) private cardSubTitle?:ElementRef;\n  @ViewChild('cardDescription', {static:true, read:ElementRef}) private cardDescription?:ElementRef;\n  //@ViewChild('cardButton', {static:true, read:ElementRef}) private cardButton?:ElementRef;\n  styleHandler$:BehaviorSubject<any> = new BehaviorSubject<any>(\"\"); \n  style$:Observable<any> = this.styleHandler$;\n \n  constructor(\n    private _colorService:ColorService\n  ){}\n\n  ngOnInit(): void {\n    //console.log(this.cardButton);\n\n    this._colorService.getColors$().subscribe(\n      colors => {\n        this.mainContainer?.nativeElement.setAttribute(\"style\", `background-color:${colors.backgroundDocument}`);\n        this.cardTitle?.nativeElement.setAttribute('style', `color:${colors.titles}`);\n        this.cardSubTitle?.nativeElement.setAttribute('style', `color:${colors.subtitles}`);\n        this.cardDescription?.nativeElement.setAttribute('style', `color:${colors.texts}`);\n        //this.cardButton?.nativeElement.setAttribute('style', `color:${colors.buttons}`);\n        this.styleHandler$.next({'background-color': `${colors.buttons}`});\n      }\n    )\n  }\n\n}\n","<mat-card #cardContainer>\n  <mat-card-header #cardHeader>\n    <mat-card-title #cardTitle>{{title}}</mat-card-title>\n    <mat-card-subtitle #cardSubtitle>{{subtitle}}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content #cardDescription>\n    {{description}}\n  </mat-card-content>\n  <mat-card-actions >\n    <button [ngStyle]=\"style$ | async\" *ngFor=\"let button of actionButtons\" mat-button #cardButton >{{button.title}}</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { map, Observable, of, skipWhile } from 'rxjs';\nimport { MockDataJsService } from '../../services/mock-data.js.service';\nimport { StringService } from '../../services/strings.service'\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n\n@Component({\n  selector: 'app-cards-component',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss']\n})\nexport class CardsComponent {\n  private readonly componentName = \"CardsComponent\";\n  private isWeb$: Observable<boolean> = of(false);\n\n  data: Observable<Array<any>> = of([]);\n\n  constructor(\n    private _mockService: MockDataJsService,\n    private _stringService: StringService,\n    private _layout: BreakpointObserver\n  ) { }\n\n  ngOnInit() {\n    //this.data = of(this._mockService.getData().cards);\n    this._layout.observe([\n      Breakpoints.Web,\n      Breakpoints.Tablet,\n      Breakpoints.Handset\n    ]).subscribe(({ matches, breakpoints }) => {\n\n      if (!matches)\n        console.log(`UNCOVER DEVICE !!`);\n\n      if (breakpoints[Breakpoints.WebLandscape])\n        console.log(`This is a WEB Landscape!`);\n\n      if (breakpoints[Breakpoints.WebPortrait])\n        console.log(`This is a WEB Portrait!`);\n\n      if (breakpoints[Breakpoints.TabletLandscape])\n        console.log(`This is a TABLET Landscape!`);\n\n      if (breakpoints[Breakpoints.TabletPortrait])\n        console.log(`This is a TABLET! Portrait`);\n\n      if (breakpoints[Breakpoints.HandsetLandscape])\n        console.log(`This is a Phone Landscape`);\n\n      if (breakpoints[Breakpoints.HandsetPortrait])\n        console.log(`This is a Phone Portrait`);\n\n\n    })\n\n    this._stringService.stringsText$.pipe(\n      skipWhile((strings: any) => !strings.components),\n      map((strings: any) => strings.components),\n      map((strings: any) => strings[this.componentName])\n    ).subscribe(cards => {\n      this.data = of(cards);\n    })\n\n  }\n}\n","<div *ngFor=\"let item of data | async\">\n    <app-card-generator\n    [title]=\"item.title\"\n    [subtitle]=\"item.subtitle\"\n    [description]=\"item.description\"\n    [actionButtons]=\"item.actionButtons\"\n    ></app-card-generator>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ColorService } from 'src/app/services/colors.service';\n\n@Component({\n  selector: 'app-coverage',\n  templateUrl: './coverage.component.html',\n  styleUrls: ['./coverage.component.scss']\n})\nexport class CoverageComponent implements OnInit {\n @ViewChild ('coverageContainer', {static:true, read:ElementRef}) private coverageContainer ?:ElementRef;\n\n  constructor(\n    private readonly _colors: ColorService\n  ) { \n\n  }\n\n  ngOnInit(): void {\n    this._colors.getColors$().subscribe(\n      colors => {\n        this.coverageContainer?.nativeElement.setAttribute(\"style\", `background-color:${colors.backgroundDocument}`);\n      }\n    )\n  }\n\n}\n","<div #coverageContainer class=\"mainContainer\">\n    <a>Hello covergae</a>\n</div>\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard-admin',\n  templateUrl: './dashboard-admin.component.html',\n  styleUrls: ['./dashboard-admin.component.scss']\n})\nexport class DashboardAdminComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { map, skipWhile } from 'rxjs';\nimport { ColorService } from '../../services/colors.service';\nimport {StringService} from '../../services/strings.service';\n\n@Component({\n  selector: 'app-header-tool-bar',\n  templateUrl: './header-tool-bar.component.html',\n  styleUrls: ['./header-tool-bar.component.scss']\n})\nexport class HeaderToolBarComponent {\n    @ViewChild('mainToolBar', {static:true, read:ElementRef}) toolBar?:ElementRef;\n    @ViewChild('titleBar', {static:true, read:ElementRef}) titleBar?:ElementRef;\n    title:string = \"\";\n    private readonly  componentName:string = \"HeaderToolBarComponent\";\n\n    constructor(\n      private _colorService:ColorService,\n      private _stringService:StringService\n    ){}\n    \n    ngOnInit() {\n      this._colorService.getColors$().subscribe(colors => {\n        this.toolBar?.nativeElement.setAttribute(\"style\", `background-color:${colors.primaryColor}`);\n        this.titleBar?.nativeElement.setAttribute('style', `color:${colors.titles}`);\n      })\n     \n      this._stringService.stringsText$.pipe(\n        skipWhile((strings:any) => !strings.components),\n        map((strings:any)=>strings.components),\n        map((componentStrings:any)=>componentStrings[this.componentName])\n      ).subscribe(strings => {\n        this.title = strings.title\n      });\n       setTimeout(()=>(this._stringService.language = \"English\"), 3000);\n    }\n\n    onToggleChange(value:any){\n      if(!value.checked){\n        this._colorService.theme = \"light\";\n        return;\n      }\n      this._colorService.theme = \"dark\";\n    }\n\n}\n","<mat-toolbar #mainToolBar>\n  <div class=\"mainContainer\">\n    <span #titleBar>{{title}}</span>\n    <div style=\"display:flex; justify-content:center; align-items:center;\">\n      <h1>🌞</h1>\n      <mat-slide-toggle (change)=\"onToggleChange($event)\"></mat-slide-toggle>\n      <h1>🌛</h1>\n    </div>\n  </div>\n</mat-toolbar>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>cvitae</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, map, Observable, skipWhile, tap } from \"rxjs\";\nimport availableThemes from '../data/themes.json';\n\n interface ThemeDetails {\n    primaryColor:string;\n    backgroundDocument: string;\n    titles:string;\n    subtitles:string;\n    texts:string;\n    warning:string;\n    error:string;\n    success:string;\n    buttons: string;\n}\n\ninterface JSON_THEMES {\n    defaultSelection:string;\n    dark:ThemeDetails,\n    light:ThemeDetails\n}\n\ntype MENU_THEMES =  \"dark\" | \"light\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ColorService{\n\n    private currentTheme$: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n    private changeThemeDetection$:Observable<string> = this.currentTheme$;\n    private jsonThemes:any = availableThemes;\n    private themeDetails$: BehaviorSubject<ThemeDetails> = new BehaviorSubject<ThemeDetails>(<ThemeDetails>{});\n    private colorListener$:Observable<ThemeDetails> = this.themeDetails$;\n\n    constructor(){\n        this.currentTheme$.next(this.jsonThemes.defaultSelection);\n        this.themeDetails$.next(this.jsonThemes[this.jsonThemes.defaultSelection]);\n        this.changeThemeDetection$.pipe(\n            skipWhile(theme => theme === \"\"),\n            map((theme:string):ThemeDetails => (this.jsonThemes[theme])),\n            tap(theme => this.themeDetails$.next(theme))\n        ).subscribe();\n    }\n\n    set theme(theme:MENU_THEMES){\n        this.currentTheme$.next(theme);\n    }\n\n    getColors$():Observable<ThemeDetails>{\n        return this.colorListener$\n    }\n}","import { Injectable } from '@angular/core';\nimport  cards from './../data/cards.json';\ninterface CardButton{\n  title:string;\n  link: string;\n}\ninterface SimpleCard{\n  title: string;\n  image:string;\n  subtitle:string;\n  description:string;\n  actionButtons: CardButton[]\n};\ninterface DataMock {\n  cards : SimpleCard[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MockDataJsService {\n\n  constructor() { \n\n  }\n\n  getData():DataMock{\n    return {\n      cards\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport englishStrings from '../data/i18n/en.json';\nimport spanishString from '../data/i18n/es.json';\n\ntype LANGUAGES = 'Spanish' | 'English';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class StringService{\n    private stringHandler$:BehaviorSubject<JSON> = new BehaviorSubject({} as JSON);\n    private strings$:Observable<JSON> = this.stringHandler$;\n    private  _englishStrings:any;\n    private _spanishStrings:any;\n    private languageCode = (lang:LANGUAGES) => ({'Spanish':'es', 'English':'en'})[lang];\n    \n    constructor(){\n        this._englishStrings = englishStrings;\n        this._spanishStrings = spanishString;\n    }\n    \n    set language(language:LANGUAGES){\n\n        switch(language){\n            case 'English':\n                    this.stringHandler$.next(this._englishStrings);\n                break;\n\n            case 'Spanish':\n                    this.stringHandler$.next(this._spanishStrings)\n                break;\n        }\n    }\n\n    get stringsText$():Observable<JSON>{\n        return this.strings$;\n    }\n\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ElementRef","BehaviorSubject","i0","CardGeneratorComponent","constructor","_colorService","styleHandler$","ngOnInit","getColors$","subscribe","colors","mainContainer","nativeElement","setAttribute","backgroundDocument","cardTitle","titles","cardSubTitle","subtitles","cardDescription","texts","next","buttons","selectors","viewQuery","map","of","skipWhile","Breakpoints","CardsComponent","_mockService","_stringService","_layout","observe","Web","Tablet","Handset","matches","breakpoints","console","log","WebLandscape","WebPortrait","TabletLandscape","TabletPortrait","HandsetLandscape","HandsetPortrait","stringsText$","pipe","strings","components","componentName","cards","data","decls","vars","consts","template","DashboardAdminComponent","breakpointObserver","title","cols","rows","shareReplay","NavigationComponent","result"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}